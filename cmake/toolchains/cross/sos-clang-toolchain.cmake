# Configures a clang-based toolchain for cross-compiling StratifyOS components
# Public Domain

include(sos-base)

# TODO: Remove this
if(NOT TOOLCHAIN_DIR)
	set(TOOLCHAIN_DIR ${SOS_SDK_PATH}/Tools/clang)
endif()
set(TOOLCHAIN_HOST llvm) # is this right?

message(STATUS "Toolchain is: " ${TOOLCHAIN_DIR}/${TOOLCHAIN_HOST})
set(TOOLCHAIN_BIN_DIR "${TOOLCHAIN_DIR}/bin" CACHE INTERNAL "TOOLCHAIN BINARY DIR")
set(TOOLCHAIN_INC_DIR "${TOOLCHAIN_DIR}/${TOOLCHAIN_HOST}/include" CACHE INTERNAL "TOOLCHAIN INCLUDE DIR")
set(TOOLCHAIN_LIB_DIR "${TOOLCHAIN_DIR}/${TOOLCHAIN_HOST}/lib" CACHE INTERNAL "TOOLCHAIN LIBRARY DIR")

# Test compiles will use static libraries, so we won't need to define linker flags
# and scripts for linking to succeed
set(CMAKE_TRY_COMPILE_TARGET_TYPE STATIC_LIBRARY)

if(TOOLCHAIN_HOST)
	set(TOOLCHAIN_HOST_PREFIX ${TOOLCHAIN_HOST}- CACHE INTERNAL "ARM TOOLCHAIN PREFIX")
else()
	set(TOOLCHAIN_HOST_PREFIX "" CACHE INTERNAL "TOOLCHAIN PREFIX")
endif()

set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM BOTH)
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)

set(CMAKE_NO_SYSTEM_FROM_IMPORTED ON CACHE INTERNAL "clang don't use isystem")
set(CMAKE_C_COMPILER ${TOOLCHAIN_BIN_DIR}/${TOOLCHAIN_HOST_PREFIX}clang${TOOLCHAIN_EXEC_SUFFIX} CACHE INTERNAL "TOOLCHAIN C COMPILER")
set(CMAKE_CXX_COMPILER ${TOOLCHAIN_BIN_DIR}/${TOOLCHAIN_HOST_PREFIX}clang++${TOOLCHAIN_EXEC_SUFFIX} CACHE INTERNAL "TOOLCHAIN C++ COMPILER")
set(CMAKE_ASM_COMPILER ${TOOLCHAIN_BIN_DIR}/${TOOLCHAIN_HOST_PREFIX}clang++${TOOLCHAIN_EXEC_SUFFIX} CACHE INTERNAL "TOOLCHAIN ASM COMPILER")
set(CMAKE_AR ${TOOLCHAIN_BIN_DIR}/${TOOLCHAIN_HOST_PREFIX}clang-ar${TOOLCHAIN_EXEC_SUFFIX} CACHE INTERNAL "TOOLCHAIN AR")
set(CMAKE_RANLIB ${TOOLCHAIN_BIN_DIR}/${TOOLCHAIN_HOST_PREFIX}clang-ranlib${TOOLCHAIN_EXEC_SUFFIX} CACHE INTERNAL "TOOLCHAIN RANLIB")
set(CMAKE_NM ${TOOLCHAIN_BIN_DIR}/${TOOLCHAIN_HOST_PREFIX}clang-nm${TOOLCHAIN_EXEC_SUFFIX} CACHE INTERNAL "TOOLCHAIN NM")
set(CMAKE_OBJCOPY ${TOOLCHAIN_BIN_DIR}/${TOOLCHAIN_HOST_PREFIX}objcopy${TOOLCHAIN_EXEC_SUFFIX} CACHE INTERNAL "TOOLCHAIN OBJCOPY")
set(CMAKE_OBJDUMP ${TOOLCHAIN_BIN_DIR}/${TOOLCHAIN_HOST_PREFIX}objdump${TOOLCHAIN_EXEC_SUFFIX} CACHE INTERNAL "TOOLCHAIN OBJDUMP")
set(CMAKE_SIZE ${TOOLCHAIN_BIN_DIR}/${TOOLCHAIN_HOST_PREFIX}size${TOOLCHAIN_EXEC_SUFFIX} CACHE INTERNAL "TOOLCHAIN SIZE")
set(CMAKE_INSTALL_PREFIX ${TOOLCHAIN_DIR}/${TOOLCHAIN_HOST} CACHE INTERNAL "TOOLCHAIN INSTALL PREFIX")

# This should probably be set in Platform/StratifyOS.cmake
set(CMAKE_CXX_FLAGS "-fno-exceptions -fno-unwind-tables -fno-rtti" CACHE INTERNAL "CMAKE CXX FLAGS")
set(CMAKE_ASM_FLAGS "-mthumb" CACHE INTERNAL "CMAKE ASM FLAGS")

